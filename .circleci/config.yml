# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1
orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
jobs:
  build-app:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
    # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint

  build-push-docker:
    machine:
      image: ubuntu-2204:2022.04.2
    steps:
      - checkout
      - run: |
          docker login --username $DOCKER_USER -p $DOCKER_PW

      # build the application image
      - run: docker build --tag=udnd-devops-capstone .

      # deploy the image
      - run: |
           docker tag udnd-devops-capstone nyrro/udnd-devops-capstone
           docker push nyrro/udnd-devops-capstone:latest

  create-cluster:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: yum install -y gzip
      - run: yum install -y tar
      - run: |
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          mv /tmp/eksctl /usr/local/bin
          eksctl version
      - run: |
          eksctl create cluster --config-file=./cluster.yaml
          eksctl get cluster basic-cluster

  deploy:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: yum install -y gzip
      - run: yum install -y tar
      - run: |
          curl -o kubectl https://s3.us-west-2.amazonaws.com/amazon-eks/1.23.7/2022-06-29/bin/linux/amd64/kubectl
          chmod +x ./kubectl
      - run: |
          ./kubectl get nodes,pods



workflows:
  default:
    jobs:
      - build-app
      # - build-push-docker:
      #     requires: [build-app]
      - create-cluster
          requires: [build-push-docker]
      - deploy
          requires: [create-cluster]
